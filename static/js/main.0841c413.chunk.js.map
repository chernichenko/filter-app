{"version":3,"sources":["reducer.js","components/Header.jsx","components/Range.jsx","context.js","components/Ranges.jsx","components/MainImage.jsx","components/Filter.jsx","components/Filters.jsx","actionTypes.js","App.jsx","serviceWorker.js","index.js"],"names":["newState","newFilters","Header","className","Range","id","value","min","max","setOneFilterHandler","action","type","onChange","e","target","Context","React","createContext","Ranges","useContext","state","addNewFilterHandler","filter1","filter2","filter3","filter4","filter5","onClick","disabled","touched","MainImage","style","WebkitFilter","src","alt","Filter","settings","setAllFiltersHandler","removeFilterHandler","contrast","hue","brightness","saturate","sepia","Filters","filters","map","filter","index","key","payload","newFilter","Math","random","push","App","initialState","localState","JSON","parse","localStorage","getItem","setItem","stringify","useReducer","reducer","dispatch","useEffect","Provider","window","confirm","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0841c413.chunk.js","sourcesContent":["import { SET_ONE_FILTER, SET_FILTERS, SET_TOUCH, ADD_NEW_FILTER, REMOVE_FILTER } from './actionTypes'\n\nlet newState, newFilters\n\nexport default function(state, action) {\n   switch (action.type) {\n\n      case SET_TOUCH: \n         return { ...state, touched: action.payload } \n\n      case SET_ONE_FILTER:\n         newState = {...state}\n         switch (action.id) {\n           case \"contrast\":\n             newState.filter1 = +action.value\n             break\n           case \"hue\":\n            newState.filter2 = +action.value\n             break\n           case \"brightness\":\n            newState.filter3 = +action.value\n             break\n           case \"saturate\":\n            newState.filter4 = +action.value\n             break\n           case \"sepia\":\n            newState.filter5 = +action.value\n             break\n           default:\n             return false\n         }\n         return newState\n\n      case SET_FILTERS: \n         newState = {...state}\n         const {contrast, hue, brightness, saturate, sepia} = action.settings\n         newState.filter1 = contrast\n         newState.filter2 = hue\n         newState.filter3 = brightness\n         newState.filter4 = saturate\n         newState.filter5 = sepia\n         return newState\n\n      case REMOVE_FILTER: \n         newState = {...state}\n         newFilters = newState.filters.filter(filter => {\n            return filter.id !== action.id\n         })\n         newState.filters = newFilters\n         return newState\n\n      case ADD_NEW_FILTER:\n         newState = {...state}\n         newFilters = newState.filters\n         const newFilter = {\n            id: Math.random(),\n            settings: {\n               contrast: state.filter1,\n               hue: state.filter2,\n               brightness: state.filter3,\n               saturate: state.filter4,\n               sepia: state.filter5\n            }\n         }\n         newFilters.push(newFilter)\n\n         newState.touched = false\n         newState.filters = newFilters\n         \n         return newState\n\n         \n      default:\n         return state\n   }\n}","import React from 'react'\r\n\r\nexport const Header = () => {\r\n   return(\r\n      <nav className=\"Header\">\r\n         <div className=\"nav-wrapper indigo\">\r\n            <div className=\"brand-logo\">Filters App</div>\r\n         </div>\r\n      </nav>\r\n   )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Range = ({ id, value, min, max, setOneFilterHandler }) => {\r\n\r\n   return(\r\n      <div className=\"Range\">\r\n         <form action=\"#\">\r\n            <p className=\"range-field\">\r\n               <label>\r\n                  {id} <span>({value})</span>\r\n               </label>\r\n               <input \r\n                  className=\"indigo\" \r\n                  type=\"range\" \r\n                  id={id} \r\n                  value={value}\r\n                  min={min} \r\n                  max={max} \r\n                  onChange={(e) => setOneFilterHandler(id, e.target.value)}\r\n               />\r\n            </p>\r\n         </form>\r\n      </div>\r\n   )\r\n}\r\n\r\nRange.propTypes = {\r\n   id: PropTypes.string.isRequired,\r\n   value: PropTypes.number.isRequired,\r\n   min: PropTypes.number.isRequired,\r\n   max: PropTypes.number.isRequired,\r\n   onChange: PropTypes.func\r\n};","import React from 'react'\r\n\r\nexport const Context = React.createContext()","import React, { useContext } from 'react'\r\nimport { Range } from './Range'\r\nimport { Context } from '../context'\r\n\r\nexport const Ranges = () => {\r\n   const { state, setOneFilterHandler, addNewFilterHandler } = useContext(Context)\r\n   const { filter1, filter2, filter3, filter4, filter5 } = state\r\n   return(\r\n      <div className=\"Ranges\">\r\n         <Range \r\n            id={'contrast'} \r\n            value={filter1}\r\n            min={0}\r\n            max={200}\r\n            setOneFilterHandler={setOneFilterHandler}\r\n         />\r\n         <Range \r\n            id={'hue'} \r\n            value={filter2}\r\n            min={-180}\r\n            max={180}\r\n            setOneFilterHandler={setOneFilterHandler}\r\n         />\r\n         <Range \r\n            id={'brightness'} \r\n            value={filter3}\r\n            min={0}\r\n            max={200}\r\n            setOneFilterHandler={setOneFilterHandler}\r\n         />\r\n         <Range \r\n            id={'saturate'}  \r\n            value={filter4}\r\n            min={0}\r\n            max={100}\r\n            setOneFilterHandler={setOneFilterHandler}\r\n         />\r\n         <Range \r\n            id={'sepia'} \r\n            value={filter5}\r\n            min={0}\r\n            max={100}\r\n            setOneFilterHandler={setOneFilterHandler}\r\n         />\r\n        \r\n         <div>\r\n            <button \r\n               className=\"waves-effect waves-light btn indigo\"\r\n               onClick={addNewFilterHandler}\r\n               disabled={!state.touched}\r\n            >\r\n               Add filter\r\n            </button>\r\n         </div>\r\n      </div>\r\n   )\r\n}","import React, { useContext } from 'react'\r\nimport { Context } from '../context'\r\n\r\nexport const MainImage = () => {\r\n\r\n   const { state } = useContext(Context)\r\n   const { filter1, filter2, filter3, filter4, filter5 } = state\r\n   let style = `contrast(${filter1}%) hue-rotate(${filter2}deg) brightness(${filter3}%) saturate(${filter4}%) sepia(${filter5}%)`\r\n\r\n   return(\r\n      <div className=\"MainImage\">\r\n         <div className=\"img-wrap\" style={{WebkitFilter: style}}>\r\n            <img src=\"https://images.wallpaperscraft.ru/image/dorozhka_alleia_derevia_138886_1920x1080.jpg\" alt=\"\"/>\r\n         </div>\r\n      </div>\r\n   )\r\n}","import React from 'react'\r\n\r\nexport const Filter = ({id, settings, setAllFiltersHandler, removeFilterHandler}) => {\r\n\r\n   let style = `contrast(${settings.contrast}%) hue-rotate(${settings.hue}deg) brightness(${settings.brightness}%) saturate(${settings.saturate}%) sepia(${settings.sepia}%)`\r\n\r\n   return(\r\n      <div className=\"Filter\">\r\n         <div \r\n            className=\"close\"\r\n            onClick={() => {removeFilterHandler(id)}}\r\n         >\r\n            <img src=\"https://image.flaticon.com/icons/svg/271/271203.svg\" alt=\"\"/>\r\n         </div>\r\n         <div \r\n            className=\"img-wrap\" \r\n            onClick={() => setAllFiltersHandler(settings)} \r\n            style={{WebkitFilter: style}}\r\n         >\r\n            <img src=\"https://images.wallpaperscraft.ru/image/dorozhka_alleia_derevia_138886_1920x1080.jpg\" alt=\"\"/>\r\n         </div>\r\n      </div>\r\n   )\r\n}","import React, { useContext } from 'react'\r\nimport { Filter } from './Filter'\r\nimport { Context } from '../context'\r\n\r\nexport const Filters = () => {\r\n\r\n   const { state, setAllFiltersHandler, removeFilterHandler } = useContext(Context)\r\n\r\n   return(\r\n      <div className=\"Filters\">\r\n         { state.filters\r\n            ? state.filters.map((filter, index) => {\r\n               return(\r\n                  <Filter\r\n                     key={index}\r\n                     id={filter.id}\r\n                     settings={filter.settings}\r\n                     setAllFiltersHandler={setAllFiltersHandler}\r\n                     removeFilterHandler={removeFilterHandler}\r\n                  />\r\n               )\r\n            })\r\n            : <h3>No filters</h3>\r\n         }\r\n      </div>\r\n   )\r\n}","export const SET_TOUCH = 'SET_TOUCH'\nexport const SET_ONE_FILTER = 'SET_ONE_FILTER'\nexport const SET_FILTERS = 'SET_FILTERS'\nexport const ADD_NEW_FILTER = 'ADD_NEW_FILTER'\nexport const REMOVE_FILTER = 'REMOVE_FILTER'","import React, { useEffect, useReducer } from 'react'; \nimport { Header } from './components/Header';\nimport { Ranges } from './components/Ranges'\nimport { MainImage } from './components/MainImage'\nimport { Filters } from './components/Filters'\nimport { Context } from './context'\nimport reducer from './reducer'\nimport { SET_ONE_FILTER, SET_FILTERS, SET_TOUCH, ADD_NEW_FILTER, REMOVE_FILTER } from './actionTypes'\n\nconst App = () => {\n\n  let initialState = {\n    touched: false,\n    filter1: 100,\n    filter2: 0,\n    filter3: 100,\n    filter4: 100,\n    filter5: 0,\n    filters: []\n  }\n  \n  let localState = JSON.parse(localStorage.getItem('filters'));\n  if(!localState){\n    localStorage.setItem('filters', JSON.stringify(initialState))\n  }else{\n      initialState = localState\n  }\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  useEffect(() => {\n    localStorage.setItem('filters', JSON.stringify(state))\n  }, [state])\n\n  const setOneFilterHandler = (id, value) => {\n    dispatch({ \n      type: SET_TOUCH,\n      payload: true \n    })\n    dispatch({\n      type: SET_ONE_FILTER,\n      id,\n      value\n    })\n  }\n\n  const setAllFiltersHandler = (settings) => {\n    dispatch({ \n      type: SET_TOUCH,\n      payload: false \n    })\n    dispatch({\n      type: SET_FILTERS,\n      settings\n    })\n  }\n\n  const addNewFilterHandler = () => {\n    if(state.touched){\n      dispatch({\n        type: ADD_NEW_FILTER\n      })\n    }\n  }\n\n  const removeFilterHandler = (id) => {\n    dispatch({ \n      type: SET_TOUCH,\n      payload: true \n    })\n    let result = window.confirm(\"Are you sure to remove the filter?\");\n    if(result){\n      dispatch({\n        type: REMOVE_FILTER,\n        id\n      })\n    }\n  }\n  \n  return (\n    <Context.Provider value={{ \n      state,\n      setOneFilterHandler, \n      setAllFiltersHandler, \n      addNewFilterHandler, \n      removeFilterHandler  \n      }}>\n      <div className=\"App\">\n        <Header />\n        <div className=\"Layout\">\n          <Ranges />\n          <MainImage />\n        </div>\n        <Filters />\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}